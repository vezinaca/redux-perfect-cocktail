{"version":3,"sources":["components/Header.js","components/Footer.js","Utilities/Utilities.js","features/favorites/favoriteSlice.js","components/Beverages/Cocktail.js","pages/HomeCocktailName.js","components/Beverages/Drink.js","pages/Ingredient.js","pages/Alcohol.js","pages/Category.js","pages/Favorites.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","className","Nav","Container","Item","Link","as","to","Button","variant","size","Footer","Row","Col","getIngredients","cocktail","ingredients","i","ingredientMeasure","ingredient","measure","push","initialStorage","localStorage","getItem","JSON","parse","setStorage","favorites","setItem","stringify","length","favoritesSlice","createSlice","name","initialState","reducers","addToFavorites","state","action","payload","removeFromFavorites","indexToRemove","forEach","favorite","index","idDrink","splice","actions","selectFavorites","Cocktail","isFav","dispatch","useDispatch","useSelector","isFavSymbol","lesIngredients","map","ListGroup","md","Card","style","width","onClick","Img","src","strDrinkThumb","Body","Title","strDrink","Text","strInstructions","strAlcoholic","strCategory","HomeCocktailName","useState","cocktailQuery","setCocktailQuery","allCocktails","setAllCocktails","fetchDrinksByName","e","a","preventDefault","search","fetch","response","json","data","drinks","fetchDrinksByNameOnLoad","mappedCocktails","useEffect","searchTerm","Jumbotron","xs","Form","Group","Label","value","onChange","target","type","placeholder","Drink","drink","show","setShow","fullDetailsCocktail","setFullDetailsCocktails","setIngredients","handleClose","fetchCocktailDetailsById","res","Modal","onHide","closeButton","Ingredient","setIngredient","setDrinks","fetchDrinks","fetchDrinksOnLoad","allDrinks","Alcohol","categoryAlcohol","setCategoryAlcohol","fetchDrinksByAlcohol","term","fetchDrinksByAlcoholOnLoad","alcoholic","Control","category","Category","categories","setCategories","setCategory","selectRef","useRef","fetchCategories","fetchDrinksByCategories","fetchDrinksByCategoriesOnLoad","searchCategory","ref","evt","Favorites","handleShow","handleRemove","id","allFavs","alt","Table","scope","App","exact","path","component","configureStore","reducer","favoritesReducer","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96db3356.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\n\nconst Header = () => {\n\n    return (\n        <>\n        <header className=\"header\">\n            <Nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\n                <Container>\n                <ul className=\"navbar-nav mr-auto\">\n                            <Nav.Item>\n                                <Nav.Link as={Link} to=\"/\"><li><h4 className=\"sitename\">PERFECT<span>COCKTAIL</span></h4></li></Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link as={Link} to=\"/\"><li className=\"nav-item\">Cocktail Name</li></Nav.Link>\n                            </Nav.Item>  \n                            <Nav.Item>\n                                <Nav.Link as={Link} to=\"/ingredient\"><li className=\"nav-item\">Ingredient</li></Nav.Link>\n                            </Nav.Item>  \n                            <Nav.Item>\n                                <Nav.Link as={Link} to=\"/category\"><li className=\"nav-item\">Category</li></Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link as={Link} to=\"/alcohol\"><li className=\"nav-item\">Alcohol/non alcohol</li></Nav.Link>\n                            </Nav.Item>  \n                        </ul>\n                        <Nav.Item>\n                                <Nav.Link as={Link} to=\"/favorites\"><Button variant=\"danger\" size=\"sm\">My Favorites</Button>\n                                    <div className=\"dropdown\">\n                                    </div>\n                                </Nav.Link>\n                        </Nav.Item>  \n                </Container>\n            </Nav>\n        </header>  \n        </>\n    )\n}\n\nexport default Header\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n    return(\n        <>\n            <footer className=\"footer\">\n                <Container>\n                    <Row className=\"justify-content-between my-row\">\n                        <Col>\n                            <h4 className=\"sitename\">PERFECT<span>COCKTAIL</span></h4>\n                        </Col>\n                        <Col>\n                            <p className=\"text-right\">All Wrongs Reversed</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </footer>\n            \n        </>\n    )\n}\n\nexport default Footer;","export const getIngredients = (cocktail) => {\n        \n    //console.log(\"drink, cocktail dans getIngredients: \", cocktail);\n    let ingredients = [];\n    for(let i = 1; i < 16; i++) {\n        const ingredientMeasure = {};\n        if( cocktail[`strIngredient${i}`] !== null ) {\n            ingredientMeasure.ingredient = cocktail[`strIngredient${i}`];\n            ingredientMeasure.measure = cocktail[`strMeasure${i}`];\n            ingredients.push(ingredientMeasure);\n\n            // console.log(\"ingredientMeasure.ingredient: \", ingredientMeasure.ingredient)\n            // console.log(\"ingredientMeasure.measure: \", ingredientMeasure.measure)\n        }\n    }\n    return ingredients;\n}\n\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStorage = localStorage.getItem('favorites') ? JSON.parse( localStorage.getItem('favorites') ) : [];\n\nconst setStorage = (favorites) => {\n    localStorage.setItem('favorites', JSON.stringify(favorites.length > 0 ? favorites : []));\n}\n\nexport const favoritesSlice = createSlice({\n    name: 'favorites',\n    initialState: {\n        favorites : initialStorage\n    },\n    \n    reducers: {\n        addToFavorites : (state, action) => {\n            state.favorites.push({...action.payload})\n            setStorage(state.favorites);\n            \n        },\n        removeFromFavorites: (state, action) => {\n            \n            let indexToRemove; \n            state.favorites.forEach((favorite, index) => {\n                if (favorite.idDrink === action.payload){\n                    indexToRemove = index;\n                }\n                \n            });\n            \n            state.favorites.splice(indexToRemove,1);\n            setStorage(state.favorites);\n            \n        },\n    }\n})\n\nexport const { addToFavorites, removeFromFavorites } = favoritesSlice.actions\n\nexport const selectFavorites = state => state.favorites.favorites;\nexport default favoritesSlice.reducer","import React from 'react'\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { getIngredients } from \"../../Utilities/Utilities\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToFavorites, removeFromFavorites, selectFavorites } from \"../../features/favorites/favoriteSlice\";\n\nconst Cocktail = ({cocktail}) => {\n\n    const dispatch = useDispatch();\n    const favorites = useSelector(selectFavorites)\n    let isFav;\n    let isFavSymbol = '+'; \n\n    favorites.forEach(favorite => {\n        if (cocktail.idDrink === favorite.idDrink){\n            isFavSymbol = '-';\n            isFav = true;\n            return;\n        }\n    })\n\n    let lesIngredients = getIngredients(cocktail).map((ingredient, index) => (\n        <ListGroup.Item key={index}>{ingredient.ingredient} {ingredient.measure}</ListGroup.Item>\n    ));\n\n    // ne pas mettre de listGroupItem dans des Card.text\n    //console.log(\"cocktail dans home: \", cocktail);\n\n    const handleClick = () => {\n        \n        if (!isFav){\n            dispatch(addToFavorites(cocktail));\n        }\n        else {\n            dispatch(removeFromFavorites(cocktail.idDrink))\n        }\n        \n    }    \n    \n    return (\n        <>\n            <Col md=\"6\" >\n                <Card style={{ width: '18rem' }} className=\"my-3 mx-auto\">\n                    <button className=\"favorite-btn btn btn-outline-info\" onClick={handleClick}>\n                        {isFavSymbol}\n                    </button>\n                    <Card.Img src={cocktail.strDrinkThumb} variant=\"top\"/>\n                    <Card.Body>\n                        <Card.Title className=\"text-center\">{cocktail.strDrink}</Card.Title>\n                        <Card.Text className=\"text-center\">Instructions</Card.Text>\n                        <Card.Text>{cocktail.strInstructions}</Card.Text>\n                        <ListGroup>\n                            <ListGroup.Item variant=\"danger\">\n                                Ingredients\n                            </ListGroup.Item>\n                            {lesIngredients}\n                        </ListGroup>\n                        <Card.Text>Extra Information</Card.Text>\n                        <Card.Text>\n                            <span className=\"badge badge-pill badge-success\">\n                                {cocktail.strAlcoholic}\n                            </span>\n                            <span className=\"badge badge-pill badge-warning\">\n                                Category: {cocktail.strCategory}\n                            </span>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n        </>\n    )\n}\n\nexport default Cocktail\n","import React, { useState, useEffect } from 'react'\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Cocktail from \"../components/Beverages/Cocktail\";\n\nimport \"./HomeCocktailName.css\";\n\nconst setStorage = (search) => {\n    localStorage.setItem('search', search);\n}\n\nconst HomeCocktailName = () => {\n\n    const [cocktailQuery, setCocktailQuery] = useState('');\n    const [allCocktails, setAllCocktails] = useState([]);\n    \n    const fetchDrinksByName = async (e) => {\n        e.preventDefault();\n        setStorage(cocktailQuery);\n        const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${cocktailQuery}`);\n        const data = await response.json();\n        setAllCocktails(data.drinks);\n   }\n\n   const fetchDrinksByNameOnLoad = async (search) => {\n    \n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${search}`);\n    const data = await response.json();\n    setAllCocktails(data.drinks);\n}\n\n   const mappedCocktails = allCocktails?.map(cocktail => (\n       <Cocktail key={cocktail.idDrink} cocktail={cocktail}/>\n   ))\n\n    useEffect(() => {\n        //console.log('useEffect homecocktailname')\n        let searchTerm = localStorage.getItem('search');\n        if (searchTerm !== null){\n            fetchDrinksByNameOnLoad(searchTerm);\n            setCocktailQuery(searchTerm);            \n        }\n\n    },[])\n\n    \n   \n    return (\n        <div>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center\">\n                    <Jumbotron className=\"col-12 col-md-10\">\n                        <h1 className=\"text-center\">Search Cocktails by Name</h1>\n                        <Row>\n                            <Col xs={12}>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Label>Cocktail Name:</Form.Label>\n                                        <input value={cocktailQuery} onChange={e => setCocktailQuery(e.target.value)} type=\"text\" placeholder=\"Eg. Margarita\" className=\"form-control\" />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button className=\"btn btn-success d-block\" onClick={fetchDrinksByName}>Get Cocktails</Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <div className=\"results\">\n                            {mappedCocktails.length !== 0 ? <h1 className=\"text-center mt-5\">Results</h1> : null }\n                            <Row className=\"mt-5\">\n                                {mappedCocktails}\n                            </Row>\n                        </div>\n                    \n                    </Jumbotron>\n                </Row>\n            </Container>\n\n        </div>\n    )\n}\n\nexport default HomeCocktailName\n","import React, { useState} from 'react'\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { getIngredients } from \"../../Utilities/Utilities\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"./Drink.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToFavorites, removeFromFavorites, selectFavorites } from \"../../features/favorites/favoriteSlice\";\n\n\nconst Drink = ({drink}) => {\n\n    const [show, setShow] = useState(false);\n    const [fullDetailsCocktail, setFullDetailsCocktails] = useState([]);\n    const [ingredients, setIngredients] = useState([]);\n    \n    const dispatch = useDispatch();\n    const favorites = useSelector(selectFavorites)\n    let isFav;\n    let isFavSymbol = '+';\n\n    favorites.forEach(favorite => {\n        if (drink.idDrink === favorite.idDrink){\n            isFavSymbol = '-';\n            isFav = true;\n            return;\n        }\n    })    \n\n    const handleClose = () => setShow(false);\n    \n    const handleShow = () => {\n        setShow(true);\n        fetchCocktailDetailsById(); \n    }\n     \n    const fetchCocktailDetailsById = async () => {\n        const res = await fetch (`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${drink.idDrink}`);\n        const data = await res.json();\n        setFullDetailsCocktails(data.drinks[0]);\n        setIngredients(getIngredients(data.drinks[0]));        \n    }\n    \n    const handleClick = () => {\n                \n        if (!isFav){\n            dispatch(addToFavorites(drink));\n        }\n        else {\n            dispatch(removeFromFavorites(drink.idDrink))\n        }\n    }\n    return (\n        <>\n            <Col className=\"col-md-4\">\n                <Card className=\"my-3\">\n                    <button onClick={handleClick} className=\"favorite-btn btn btn-outline-info\">\n                        {isFavSymbol}\n                    </button>\n                    <Card.Img src={drink.strDrinkThumb} />\n                    <Card.Body>\n                        <Card.Title className=\"text-center\">{drink.strDrink}</Card.Title>\n                        <Button variant=\"success\" onClick={handleShow}>Get Recipe</Button>\n                    </Card.Body>\n                </Card>\n            \n            </Col>\n            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{drink.strDrink}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ListGroup>\n                        <ListGroup.Item variant=\"success\">Preparation</ListGroup.Item>\n                        <ListGroup.Item>{fullDetailsCocktail.strInstructions}</ListGroup.Item>\n                        <ListGroup.Item variant=\"success\">Ingredients</ListGroup.Item>\n                        {ingredients?.map((ingredient, index) =>(\n                            <ListGroup.Item key={index}>{ingredient.ingredient} - {ingredient.measure}</ListGroup.Item>\n                        ) )}\n                       \n                    </ListGroup>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>Close </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Drink\n","import React, { useState, useEffect } from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Drink from \"../components/Beverages/Drink\";\n\nconst setStorage = (ingredient) => {\n    localStorage.setItem('ingredient', ingredient);\n}\n\nconst Ingredient = () => {\n\n    const [ingredient, setIngredient] = useState('');\n    const [drinks, setDrinks] = useState([]);\n\n    const fetchDrinks = async () => {\n\n        setStorage(ingredient);\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient}`);\n        const data = await res.json();\n        setDrinks(data.drinks);        \n    }\n\n    const fetchDrinksOnLoad = async (search) => {\n\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${search}`);\n        const data = await res.json();\n        setDrinks(data.drinks);        \n    }\n\n    const allDrinks = drinks?.map(drink => (\n        <Drink key={drink.idDrink} drink={drink} />\n    ))  \n\n    useEffect(() => {\n        let searchTerm = localStorage.getItem('ingredient');\n        if (searchTerm !== null){\n            fetchDrinksOnLoad(searchTerm)\n            setIngredient(searchTerm);\n        }\n\n    }, [])\n    \n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center\">\n                    <Jumbotron className=\"col-12 col-md-10\">\n                        <h1 className=\"text-center\">Search Cocktails by Ingredient</h1>\n                        <Row>\n                            <Col xs={12}>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Label>Ingredient:</Form.Label>\n                                        <input \n                                            type=\"text\" \n                                            value={ingredient} \n                                            placeholder=\"e.g. Vodka\" \n                                            className=\"form-control\" \n                                            onChange={e => setIngredient(e.target.value)}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button variant=\"success\" onClick={fetchDrinks}>Get Cocktail</Button>\n                                    </Form.Group>\n                                </Form>                                \n                            </Col>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                            {drinks.length !== 0 ? <h1 className=\"text-center\">Results</h1> : null}\n                        </Row>\n                        <Row>\n                            {allDrinks}\n                        </Row>\n                    </Jumbotron>\n\n                </Row>\n\n            </Container>\n            \n            \n        </>\n    )\n}\n\nexport default Ingredient\n","import React, { useState, useEffect } from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Drink from \"../components/Beverages/Drink\";\n\nconst setStorage = (alcoholic) => {\n    localStorage.setItem('alcoholic', alcoholic);\n}\n\nconst Alcohol = () => {\n\n    const [drinks, setDrinks] = useState([]);\n    const [categoryAlcohol, setCategoryAlcohol] = useState('');\n\n    const fetchDrinksByAlcohol = async (term) => {\n        \n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=${term}`);\n        const data = await res.json();\n        setDrinks(data.drinks);\n        setCategoryAlcohol(term);\n\n    }\n\n    const fetchDrinksByAlcoholOnLoad = async (term) => {\n        \n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=${term}`);\n        const data = await res.json();\n        setDrinks(data.drinks);\n\n    }\n\n    const handleChange = e => {\n        fetchDrinksByAlcohol(e.target.value);\n        setCategoryAlcohol(e.target.value);\n        setStorage(e.target.value);\n    }\n\n    useEffect (() => {\n        let alcoholic = localStorage.getItem('alcoholic');\n        if (alcoholic !== null){\n            fetchDrinksByAlcoholOnLoad(alcoholic);\n            setCategoryAlcohol(alcoholic);\n        }\n\n    },[])\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center\">\n                    <Jumbotron className=\"col-12 col-md-10\">\n                        <h1 className=\"text-center\">Search Cocktails by Alcohol / Non Alcohol</h1>\n                        <Row>\n                            <Col className=\"col-12\">\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Control value={categoryAlcohol} as=\"select\" onChange={handleChange}>\n                                            <option value=\"none\">- Select -</option>\n                                            <option value=\"Alcoholic\">Alcoholic</option>\n                                            <option value=\"Non_Alcoholic\">Non Alcoholic</option>\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                </Form>\n                            </Col>\n                            <Col className=\"col-12 mt-5 results-wrapper\">\n                                {drinks.length !== 0? <h1 className=\"text-center\">Results: </h1>: null}\n                                <Row className=\"mt-5\">\n                                    {drinks?.map(drink => (\n                                        <Drink key={drink.idDrink} drink={drink}></Drink>\n                                    ))}\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Alcohol\n","import React, { useState, useEffect, useRef } from 'react'\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Drink from \"../components/Beverages/Drink\";\nimport \"./Category.css\";\n\nconst setStorage = (category) => {\n    localStorage.setItem('category', category);\n}\n\nconst Category = () => {\n\n    const [categories, setCategories] = useState([]);\n    const [drinks, setDrinks] = useState([]);\n    const [category, setCategory] = useState('');\n    const selectRef = useRef();\n    \n    const fetchCategories = async () => {\n        const res = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n        const data = await res.json();\n        setCategories(data.drinks);\n    }\n\n    const fetchDrinksByCategories = async (category) => {\n        setStorage(category);\n        setCategory(category);\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n        const data = await res.json();\n        setDrinks(data.drinks);\n    }\n\n    const fetchDrinksByCategoriesOnLoad = async (category) => {\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n        const data = await res.json();\n        setDrinks(data.drinks);\n    }\n        \n    useEffect(() => {\n        fetchCategories();        \n        let searchCategory = localStorage.getItem('category');\n        \n        if (searchCategory !== null){\n            setCategory(searchCategory);\n            fetchDrinksByCategoriesOnLoad(searchCategory);\n        }\n\n    }, [])\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center\">\n                    <Jumbotron className=\"jumbotron col-12 col-md-10\">\n                        <h1 className=\"text-center\">Search Cocktails by Category</h1>\n                    <Row>\n                        <Col className=\"col-12\">\n                            <Form>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Category: \n                                    </Form.Label>\n                                    <Form.Control value={category} ref={selectRef} className=\"categorySelect\" as=\"select\" onChange={(evt) => fetchDrinksByCategories(evt.target.value)}>\n                                        <option> - Select - </option>\n                                        {\n                                            categories.map((category, index) => (\n                                                <option value ={category.strCategory} key={index}>{category.strCategory}</option>\n                                            ))\n                                        }\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col className=\"col-12 mt-5 results-wrapper\">\n                            {drinks.length !== 0 ? <h1 className=\"text-center\">Results: </h1> : null }\n                            <Row className=\"mt-5\">\n                                {drinks?.map(drink => (\n                                    <Drink key={drink.idDrink} drink={drink} />\n                                ))}\n                            </Row>\n\n                        </Col>\n                    </Row>\n                    </Jumbotron>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Category\n","import React, { useState } from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"./Favorites.css\";\nimport { getIngredients } from \"../Utilities/Utilities\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { removeFromFavorites, selectFavorites } from \"../features/favorites/favoriteSlice\";\n\nconst Favorites = () => {\n\n    const [show, setShow] = useState(false);\n    const [fullDetailsCocktail, setFullDetailsCocktails] = useState([]);\n    const favorites = useSelector(selectFavorites)\n    const dispatch = useDispatch();\n    const [ingredients, setIngredients] = useState([]);\n    \n    const handleClose = () => setShow(false);\n\n    const handleShow = (e) => {\n        e.preventDefault();        \n        fetchCocktailDetailsById(e.target.value);        \n        setShow(true);\n    }\n\n    const handleRemove = (e) => {        \n        dispatch(removeFromFavorites(e.target.value))\n    }\n\n    const fetchCocktailDetailsById = async (id) => {\n        const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const data = await res.json();\n        setFullDetailsCocktails(data.drinks[0]);\n        setIngredients(getIngredients(data.drinks[0]));\n    }\n    const allFavs = favorites?.map(favorite => (\n        <tr key={favorite.idDrink}>\n            <td><img src={favorite.strDrinkThumb} width=\"80px\"alt=\"problem\"/></td>\n            <td>{favorite.strDrink}</td>\n            <td><Button variant=\"success\" onClick={handleShow} value={favorite.idDrink}>View</Button></td>\n            <td><Button variant=\"danger\" onClick={handleRemove} value={favorite.idDrink}>Remove</Button></td>\n        </tr>\n    ))\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center\">\n                    <Jumbotron className=\"col-12 col-md-10\">\n                        <h1 className=\"text-center mb-4\">My Favorites</h1>\n                        <Row>\n                            <Col className=\"col-12\">\n                                <Table>\n                                    <thead className=\"bg-danger\">\n                                        <tr>\n                                            <th scope=\"col\">Image</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">View</th>\n                                            <th scope=\"col\">Remove</th>\n                                        </tr>\n                                    </thead>                                        \n                                    <tbody>\n                                        {allFavs}\n                                    </tbody>\n\n                                </Table>\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                </Row>\n            </Container>\n\n           <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{fullDetailsCocktail.strDrink}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ListGroup>\n                        <ListGroup.Item variant=\"success\">Preparation</ListGroup.Item>\n                        <ListGroup.Item>{fullDetailsCocktail.strInstructions}</ListGroup.Item>\n                        <ListGroup.Item variant=\"success\">Ingredients</ListGroup.Item>\n                        {ingredients?.map((ingredient, index) =>(\n                            <ListGroup.Item key={index}>{ingredient.ingredient} - {ingredient.measure}</ListGroup.Item>\n                        ) )}\n                    </ListGroup>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            \n        </>\n    )\n}\n\nexport default Favorites;","import React from 'react';\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport { BrowserRouter as Browser, Switch, Route } from \"react-router-dom\";\r\nimport HomeCocktailName from \"./pages/HomeCocktailName\";\r\nimport Ingredient from \"./pages/Ingredient\";\r\nimport Alcohol from \"./pages/Alcohol\";\r\nimport Category from \"./pages/Category\";\r\nimport Favorites from \"./pages/Favorites\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Browser>\r\n        <div className=\"app\">\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={HomeCocktailName}></Route>\r\n                <Route path=\"/ingredient\" component={Ingredient}></Route>\r\n                <Route path=\"/category\" component={Category}></Route>\r\n                <Route path=\"/alcohol\" component={Alcohol}></Route>\r\n                <Route path=\"/favorites\" component={Favorites}></Route>\r\n            </Switch>\r\n            <Footer />\r\n        </div>\r\n    </Browser>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport favoritesReducer from \"../features/favorites/favoriteSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    //counter: counterReducer,\r\n    favorites: favoritesReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n//   <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n//   </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}